#ifndef APPLICATION
#define APPLICATION

#include <iostream>
#include "Position.h"

using namespace std;

class Application
{
	friend ostream& operator<< (ostream& stream,Application& app);

public:
	//postcondition: return the initial positiion and state of the application
	//generated by setting value
	Position genInitialState();

	//postcondition: if pos is on the way to destination return True;
	bool valid(const Position& pos);

	//precondition: pos denotes a valid;
	//postcond:pos was recorded as valid position
	void record(const Position& pos);

	//postcod: if pos is the last positiion in the App Class, return True
	bool done(const Position& pos);

	//postcond: pos was removed from path
	void undo(const Position& pos);

	class Iterator
	{
	public:
		//Constructor
		Iterator();

		//Constructor with para
		Iterator(const Position& pos);

		//precond: move forward from current pos
		//postcond: next pos
		Position operator++(int);

		bool atEnd();

	protected:
		//void ptr, leave the possibility of modify from outside of Class
		void* fieldPtr;

	};//Class Iterator

};//Class Application

#endif
